<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Eli RodrÃ­guez PÃ©rez</title>
        <link>https://eli-rodriguez.com/en/posts/</link>
        <description>Recent content in Posts on Eli RodrÃ­guez PÃ©rez</description>
        <generator>Hugo -- gohugo.io</generator>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sun, 29 Sep 2019 15:40:00 +0200</lastBuildDate>
        <atom:link href="https://eli-rodriguez.com/en/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Using an even smaller keyboard</title>
            <link>https://eli-rodriguez.com/en/posts/using-an-even-smaller-keyboard/</link>
            <pubDate>Sun, 29 Sep 2019 15:40:00 +0200</pubDate>
            
            <guid>https://eli-rodriguez.com/en/posts/using-an-even-smaller-keyboard/</guid>
            <description>40% ortholinear keyboard  Last time I discovered the wonderful world of QMK and keyboard firmware customization. If you remember, we went onto how important it is to feel comfortable using your keyboard, specially when it&amp;rsquo;s your work tool. I teased this post with a question that said: &amp;ldquo;could I go even smaller?&amp;rdquo;. And so, even smaller I went.
40% ortholinear keyboard   
This is my new keyboard, it&amp;rsquo;s a 40% ortholinear keyboard and it&amp;rsquo;s my new daily driver.</description>
            <content type="html"><![CDATA[


    <figure class="left" >
        <img src="/img/posts/ortholinear-keyboard/niu-mini.jpg"   />

        
            <figcaption class="center" >40% ortholinear keyboard</figcaption>
        
    </figure>



<p>Last time I discovered the wonderful world of QMK and keyboard firmware
customization. If you remember, we went onto how important it is to feel
comfortable using your keyboard, specially when it&rsquo;s your work tool. I teased
this post with a question that said: &ldquo;could I go even smaller?&rdquo;. And so, even
smaller I went.</p>

<h2 id="40-ortholinear-keyboard">40% ortholinear keyboard</h2>

<p><center>
    <iframe
    width="760"
    height="428"
    src="https://www.youtube.com/embed/bEPg8kk84gw"
    frameborder="0"
    allow="accelerometer; encrypted-media; gyroscope; picture-in-picture"
    allowfullscreen></iframe>
</center></p>

<p>This is my new keyboard, it&rsquo;s a 40% ortholinear keyboard and it&rsquo;s my new daily
driver. I use it for everything. Say gaming, programming, text editing&hellip;
<strong>EVERYTHING</strong></p>

<p>I&rsquo;ve been using it for a couple of months and I&rsquo;m totally used to it. There were
some habits I had to change but it&rsquo;s all good now.</p>

<p>A 40% keyboard is called like that because it&rsquo;s roughly 40% the size of a full
sized keyboard, those being the ones with arrows and a numpad. Many people think
that going smaller means losing functionality, and while it&rsquo;s what it seems like
when you look at a keyboard so small it&rsquo;s not true at all. There is a really
good saying that goes: &ldquo;On a full sized keyboard your fingers move to the keys
while in a 40% keyboard the keys move towards you.&rdquo; My keyboard in particular
has 47 keys, and I would never thought that I&rsquo;d say this but there are some keys
that I&rsquo;m not using. It&rsquo;s not about the number of keys, it&rsquo;s about how you use
them. And having the possibility of programming the functionality of each key
has made me realize that I need no more than a 40% keyboard.</p>

<p>I also have to point out that 40% keyboards don&rsquo;t have to be all the same and
being a 40% doesn&rsquo;t mean that it has to be ortholinear. This is a photo of a
keyboard that while being a 40% it&rsquo;s still a staggered keyboard.</p>


    <figure class="left" >
        <img src="/img/posts/ortholinear-keyboard/smol-keeb.jpg"   />

        
            <figcaption class="center" >40% staggered keyboard (tjcampie&#39;s dimple)</figcaption>
        
    </figure>



<p>An ortholinear keyboard is one that has a grid style layout, just like the
numpad in a full sized keyboard, the more popular ones are normally arranged in
a 4x12 grid but you can find them in a variety of layouts.</p>

<p>If we take a look at the keyboard we can observe that it&rsquo;s designed so that
every key is at most 1 key away from your fingers resting position at the home
row. The bottom row is supposed to be used mostly with the thumb, except from
those keys at the end of each side. The top 3 rows are the ones that hold
alphanumerics and some other mods, we&rsquo;ll take a look at my layout later. The
interesting part about this layout is that it gets rid of the horrendously huge
spacebar and puts in more keys that can be used as new modifiers, for example,
we can make the top row numerical like in a standard keyboard, we can have a
numpad layer to emulate one we could have on a full sized keyboard.</p>

<h2 id="stuck-in-the-times-of-typewriters">Stuck in the times of typewriters</h2>


    <figure class="left" >
        <img src="/img/posts/ortholinear-keyboard/full-sized-keyboard.png"   />

        
            <figcaption class="center" >Full sized keyboard image for reference</figcaption>
        
    </figure>



<p>We can argue that an ortholinear keyboard is not really ergonomic by itself, and
that would be true. But at the same time, being stuck on a keyboard layout
invented to slow down people typing on typewriters more than a century ago isn&rsquo;t
the best solution either. It&rsquo;s true that it&rsquo;s not exactly the same layout, but
the current keyboard layout is heavily influenced by the popular IBM keyboards
from the 70&rsquo;s that are mostly an adaptation to modern computers from typewriter
layouts.</p>

<p>After all this time I&rsquo;ve been using a 40% keyboard, typing on it feels like
home. Whenever I have to go back to a full sized keyboard a lot of keys feel so
far away it even hurts to try to reach them (backspace ðŸ˜©).</p>

<p>Qwerty is also something that I feel is wrong with standard keyboards, I still
type on it and I really think I should move to Colemak someday but it&rsquo;s
something that requires a bit of time to get back to productive levels of typing
so I have yet to find some time to fully go for it.</p>

<p>One of the biggest downsides to standard layouts is how much work it puts on the
pinkies. The pinky is the weakest finger but for some reason it&rsquo;s supposed to
hit the farthest keys and held modifiers for large amounts of time. Meanwhile,
the strongest finger, the thumb, only has the huge space key at reach. Both
thumbs for a single key is just not optimal.</p>

<p>Traditional keyboards have one key for each function, and that&rsquo;s what it makes
them have so many keys to fit every single function available. 40% keyboards on
the other hand take advantage of the different ways you press a key to fit a lot
more functionality on a single key. Keys either have a tap or a hold function,
if you type a letter you only tap the key once and for a short amout of time.
But with shift for example you have to hold the key to make it function. Taking
this into account you can merge different keys into one. I myself have the space
key act as a layer modifier when held and as a normal space character when
tapped.</p>

<h2 id="how-does-an-ortholinear-keyboard-solve-my-problems">How does an ortholinear keyboard solve my problems</h2>

<p>Right now I&rsquo;m mostly happy and comfortable while using my keyboard, some of it
is because I feel like I&rsquo;m using a more comfortable layout but most of it is
having a fully programmable keyboard. Having to adapt to a given keyboard layout
is not fair because people just have different preferences, different needs. I
really feel like the keyboard industry is riding a wave of stagnation and
laziness regarding our daily tool. Most people don&rsquo;t want to learn new ways of
doing things, but it shouldn&rsquo;t be the norm, or the only option.</p>

<p>I&rsquo;m sure that if you&rsquo;re a taxi driver there are a lot of cars to choose from
that better fit your needs. If you&rsquo;re a cook you probably have your own tools
that fit your way of working&hellip; You get the point.</p>

<p>This keyboard isn&rsquo;t necessarily the solution, but it really enables me to have a
comfortable workflow while having to type at least for 8h a day.</p>

<h2 id="my-layout">My layout</h2>

<p>My layout has changed a bit since my last post, but I mostly tried to port it
back to the 65% keyboard. I&rsquo;ll probaly make some tweaks here and there but I&rsquo;m
mostly sure I&rsquo;m on my endgame layout. I also have to point out that I got a
planck keyboard for work and have a full grid layout on it. Layout is exactly
the same except I shift the backspace key to the left of the space one more key
to the left, so it acts as backspace when tapping and lower when held.</p>

<p><center><img src="/img/posts/ortholinear-keyboard/layer-0.png" alt="Main layer" /></center></p>

<p>We mostly have a standard qwerty layout, with a few changes to better fit my
needs. I use vim as an editor so having an <code>escape</code> key closely available is
something I like, that&rsquo;s why in place of <code>caps lock</code> I have an <code>escape</code> key when
tapped and a <code>control</code> key when held.</p>

<p>The <code>tab</code> key is a tap based key, so we can actually fit a hold based function
on it. That&rsquo;s where I fit my numpad layer that we will later take a look at.</p>

<p>The <code>space</code> key is also a tap based key so I put a movement layer there, it&rsquo;s
the last layer we will take a look at.</p>

<p>The bottom row corners had nothing on it so I decided to put a Hyper and a Meh
key, which simulate hitting <code>ctrl+shift+alt+gui</code> and <code>ctrl+shift+alt</code>
respectively without having to hit all those keys at the same time. Those key
combinations are not normally used for system shortcuts so I have them assigned
to change workspaces, move windows around, screenshot shortcuts&hellip; Those two
keys are kinda hard to hit with pinky fingers so I instead use the edge of the
palm of my hand to hit them.</p>

<p>The keys named <code>MO(1)</code> and <code>MO(2)</code> are usually called <code>lower</code> and <code>raise</code>
respectively and are supposed to activate layers that held keys to represent
numbers and symbols that are missing by not having a physical number row. I know
most people have them switched to what I used but I use them this way so that I
can easily hit numbers when playing games on <code>wasd</code> or <code>qwer</code>.</p>

<p>In my case the logic behind lower and raise was the following. The lower layer
holds all the characters that in a key are normally printed on the lower part of
the key. And the raise layer holds all the shifted variants of character on the
lower layer, that are normally printed on the higher side of the key. To get the
number 6 we would have to hit <code>lower+y</code>, <code>y</code> is the 6th key if we start counting
from <code>q</code>. To get the caret on the other hand we would hit <code>raise+y</code>.</p>

<p><center><img src="/img/posts/ortholinear-keyboard/key.png" alt="Keyboard key" /></center></p>

<p>And here we have a photo of both lower and raise layers.</p>

<p><center><img src="/img/posts/ortholinear-keyboard/layer-1.png" alt="Lower layer" /></center></p>

<p><center><img src="/img/posts/ortholinear-keyboard/layer-2.png" alt="Raise layer" /></center></p>

<p>We can now take a look at my numpad layer, it holds a standard numpad where my
right hand rests so I can use it without even having to move my hand. I have
also chosen to put my F-keys in this layers as I don&rsquo;t use them that much and
I&rsquo;m already used to their position.</p>

<p><center><img src="/img/posts/ortholinear-keyboard/layer-3.png" alt="Numpad layer" /></center></p>

<p>And lastly we have my movement layer, this layer aims to facilitate what arrow
keys normally do without having them a million kilometers away from my normal
position. I&rsquo;ve chosen to have the arrows vim style but you can see how useful
this layer can be compared to the stardard way of using arrows.</p>

<p><center><img src="/img/posts/ortholinear-keyboard/layer-4.png" alt="Movement layer" /></center></p>

<h2 id="conclusion">Conclusion</h2>

<p>This is the end of my post, hope you liked it. My interest with all of this
comes from me wanting to improve my workflow and feel more comfortable in my
work environment. This is not meant to bash on people using standard keyboards,
just a reflexion trying to show how we have alternatives to what&rsquo;s normally
presented to us and to try to get people to know this world of 40% keyboards.</p>
]]></content>
        </item>
        
        <item>
            <title>My current keyboard layout</title>
            <link>https://eli-rodriguez.com/en/posts/my-current-keyboard-layout/</link>
            <pubDate>Mon, 10 Jun 2019 21:09:56 +0200</pubDate>
            
            <guid>https://eli-rodriguez.com/en/posts/my-current-keyboard-layout/</guid>
            <description>As you may have realized based on my previous post, I&amp;rsquo;m really into improving my efficiency when it comes to programming and using the keyboard in general. That&amp;rsquo;s why I got into Vim and that&amp;rsquo;s why now I&amp;rsquo;m into keyboard stuff.
When I was little I remember my dad teaching me to touch type, we didn&amp;rsquo;t even have a computer at home, but my dad thought it was important for me to learn to use a keyboard and brought an old typewriter home.</description>
            <content type="html"><![CDATA[

<p>As you may have realized based on my previous post, I&rsquo;m really into improving my
efficiency when it comes to programming and using the keyboard in general.
That&rsquo;s why I got into Vim and that&rsquo;s why now I&rsquo;m into keyboard stuff.</p>

<p>When I was little I remember my dad teaching me to touch type, we didn&rsquo;t even
have a computer at home, but my dad thought it was important for me to learn to use
a keyboard and brought an old typewriter home. He had an old book that I used to
practice touch typing and I remember how I spent hours typing repeatedly the
same blocks of text. Eventually the typewriter went away and I got to use my dads
work laptop, in which I (sometimes) cheated by copy pasting the exercises.</p>

<p>I&rsquo;m so grateful that I got to learn to touch type so young, I can&rsquo;t recall
exactly, but it was around the age of 8. I got a base in touch typing, I could
type quite fast for my age and I never got to develop bad habits.</p>

<h2 id="what-has-changed-since-then">What has changed since then</h2>

<p>Fast forward to today and I&rsquo;m a programmer, the keyboard is my main tool for
work and coincidentally gaming is also a hobby of mine. I spend <strong>a lot</strong> of time
in front of a computer. If you&rsquo;re interested I average 80 wpm, it&rsquo;s not
ultrafast, but I think it&rsquo;s good enough that I don&rsquo;t feel like it&rsquo;s a bottleneck.</p>

<p>I have changed quite a lot of things whenever I felt like something made me
slow in regards to typing. First it was Vim, or modal editing, that made me
realize how awesome it was to not have to move your hand away from the keyboard
so much.</p>

<p>Then when you spend hours coding in the default spanish keyboard layout,
you start to realize how it never was intended to be used for coding.
For some reason you have the most useful coding characters behind third layer
modifiers, and at the same time you have <code>Ã±</code> and <code>Ã§</code> as no mod characters
instead of having them behind AltGr shortcuts. I could even argue that accented
vowels are occupying the precious spot of the most used characters in
programming. Needless to say I moved away from that layout, I&rsquo;m now using the US
International layout, which has the standart US layout but you can also get
special latin characters with AltGr combinations. So I still have <code>Ã±</code> behind
<code>AltGr + n</code> and accented vowels behind <code>AltGr + vowel</code>.</p>

<p>After this changes I got super comfortable with my typing experience inside my
code editor of choice. But there was still a big problem, when I was out of Vim,
say in the web browser sending an email or when I found myself in a word
processor like Libre Office.</p>

<h2 id="where-are-my-vim-bindings">Where are my Vim bindings!</h2>

<p>No more waiting, I&rsquo;m going to go straight to the point of this post. How did I
end up being at peace (not really) with my keyboard use outside of Vim? Behold
my current layout:</p>

<h3 id="main-layer">Main layer</h3>

<p><center><img src="/img/posts/keyboard-layout/keyboard-layout-0.png" alt="Main layer" /></center></p>

<p>This is a blueprint of my keyboard configuration. The keyboard I&rsquo;m using is a
TADA68, which is a 65% keyboard. I don&rsquo;t even make use of the arrows or the
first column on the right side of the keyboard. The important part of my
keyboard is that you can flash whatever configuration you want into the board.
And so when you take it anywhere, say work or when traveling, you keep the key
configuration as you wanted when you flashed it. This is made possible by
<a href="https://github.com/qmk/qmk_firmware/">QMK</a>, but if you don&rsquo;t have a QMK
compatible keyboard you still can change things up by software.</p>

<p>Let me go into the <em>why&rsquo;s</em> of my configuration:</p>

<ul>
<li><p>I used to have the <em>Esc</em> key where the <em>Caps Lock</em> key is, but now that I have
the possibility, I have both <em>Ctrl</em> and <em>Esc</em> key in the <em>Caps Lock</em>. The key
works as <em>Esc</em> when you tap it and as <em>Ctrl</em> when you hold it. This is
possible thanks to <em>Tap Dance</em>, which is a concept introduced by the QMK
firmware configuration.</p></li>

<li><p>Because I now have the <em>Esc</em> and <em>Ctrl</em> in a single key I&rsquo;m free to put back
the <em>Grave/Tilde</em> key back on top of <em>Tab</em>. I also make use of the <em>Ctrl</em>
position to have access to the second layer which we will take a look at
later.</p></li>

<li><p>The main feature of this configuration is the <em>Space</em> key. Which acts both as
a <em>Space</em> when tapped and as a layer 1 access key when held. Layer 1 gives us
access to some keys that enable us to not have to move our hand away from
the main row while having access to every single key you can find in a full
size keyboard, numpad included.</p></li>
</ul>

<h3 id="first-layer">First layer</h3>

<p><center><img src="/img/posts/keyboard-layout/keyboard-layout-1.png" alt="First layer" /></center></p>

<p>I don&rsquo;t have every key configured into this layout, just the ones I use the
most. There are also some keys with no resoning behind them besides being in
convenient positions. The <em>whys</em> to this layer:</p>

<ul>
<li><p>I have <em>hjkl</em> as arrow keys, with this I have Vim style movement keys in every
single place text input is expected at.</p></li>

<li><p>As in Vim, <em>b</em> and <em>e</em> work as word wise motions backwards and forwards.</p></li>

<li><p>The <em>y</em> key copies, acting as <code>Ctrl + Ins</code> which also works for the console
and Emacs, unlike <code>Ctrl + C</code>. And on the contrary the <em>p</em> key pastes, acting
as <code>Shift + Ins</code>.</p></li>

<li><p>Finally we have <em>Home</em> and <em>End</em> keys in intuitive positions, also an
alternative <em>Enter</em> key close to my index finger. The <em>Function</em> keys are
accessible through the numbers now.</p></li>
</ul>

<h3 id="second-layer">Second layer</h3>

<p><center><img src="/img/posts/keyboard-layout/keyboard-layout-2.png" alt="Second layer" /></center></p>

<p>This layer is just for convenience, but has a couple of interesting uses.</p>

<ul>
<li><p>Without moving my hand I have access to a numpad, only inconvenience is that
is not ortholinear, but maybe will be soon ðŸ‘€.</p></li>

<li><p>Now that my Caps Lock key doesn&rsquo;t actually act as intended, I have it mapped
to <code>Layer2 + c</code>.</p></li>

<li><p>I almost never use media keys but they&rsquo;re there, I suppose I&rsquo;ll have too look
at the binding whenever I want to use it.</p></li>

<li><p>Lastly I have a key to change my default layout to a gaming layout, that is
one where I don&rsquo;t really want to have <em>Control</em> at <em>Caps Lock</em> and also have
<em>Space</em> acting as normal. You&rsquo;ll have a screenshot below but I don&rsquo;t think
it needs much explanation. I just activate it whenever I need it and change
it back when I finished playing.</p></li>
</ul>

<p><center><img src="/img/posts/keyboard-layout/keyboard-layout-3.png" alt="Gaming layer" /></center></p>

<h2 id="conclusion">Conclusion</h2>

<p>I went down to a 65% keyboard and it&rsquo;s been one of my biggest leaps in regards
to productivity. I can&rsquo;t recommend QMK firmware keyboards enough, they&rsquo;re so
awesome. I never knew I needed it and now I can&rsquo;t go back. The amount of
customization available to you is huge and everything is flashed into the
keyboard, no need for software after that, just take it anywhere.</p>

<p>As I said before, I&rsquo;m really comfortable with this configuration and it really
has improved my productivity by a lot. But now I feel like there are a lot of
useless keys in my keyboard. And my question is, could I go even smaller?</p>

<h2 id="links-of-interest">Links of interest</h2>

<ul>
<li><a href="https://qmk.fm/">QMK firmware webpage.</a></li>
<li><a href="https://old.reddit.com/r/MechanicalKeyboards/">Mechanical Keyboards&rsquo;
subreddit</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Modal editing, the superior way of editing</title>
            <link>https://eli-rodriguez.com/en/posts/modal-editing-the-superior-way-of-editing/</link>
            <pubDate>Sun, 26 May 2019 15:29:34 +0200</pubDate>
            
            <guid>https://eli-rodriguez.com/en/posts/modal-editing-the-superior-way-of-editing/</guid>
            <description>Well ok, I might have exagerated. I actually don&amp;rsquo;t care what text editor you use, just use the one you feel most comfortable with. What I really want to transmit with this text is that there are more ways to edit text than the traditional way, the one most people use when they learn how to use a computer.
I don&amp;rsquo;t want to make anyone feel bad with this post.</description>
            <content type="html"><![CDATA[

<p><center><img src="https://lcom.static.linuxfound.org/images/stories/vim-logo.jpg" alt="Vim
logo" /></center></p>

<p>Well ok, I might have exagerated. I actually don&rsquo;t care what text
editor you use, just use the one you feel most comfortable with.  What
I really want to transmit with this text is that there are more ways
to edit text than <em>the traditional way,</em> the one most people use when
they learn how to use a computer.</p>

<p>I don&rsquo;t want to make anyone feel bad with this post. This is not an
editor war, neither about how you have to edit text. If you&rsquo;re reading
this it&rsquo;s because you&rsquo;re interested in learning about a concept that&rsquo;s
not common or you want to know what all this is about.</p>

<p>This is also not a tutorial about how to use <em>Vim</em>, I want to focus on
what implies using a modal text editor and in the <em>why</em>, <em>how</em> and
<em>how not</em>. I&rsquo;m trying to give some guidance, resources and ideas so
that if you&rsquo;re interested in learning about it you have some
preconceived knowledge about modal editing&rsquo;s purpouse.</p>

<p><center><img src="/img/posts/modal-editing/vim-demonstration.gif" alt="Vim editing
demo" /></center></p>

<h2 id="the-philosophy">The philosophy</h2>

<p>Modal editing was born out of the necessities programmers had back
when the only way of interacting with the computer was through the
<em>command line interface</em>. There was no mouse you could use because
there even weren&rsquo;t any graphical interfaces you could scroll
through. This is when out of these needs people started to find a way
to optimize how they edited text through the keyboard.</p>

<p>So well, what&rsquo;s the philosophy behind modal editing? We can summarize
it in a few lines, but I&rsquo;ll probably forget something.</p>

<ul>
<li>Optimize the use of the keyboard.</li>
<li>Minimize the distance our hand travels from what we call the <em>home
row</em>. This is our keyboard&rsquo;s main row, in which our hand normally
rests.</li>
<li>Make use of modes (this is where <em>modal editing</em> comes from), that
change the behaviour of the different keys in our keyboard so we can
make use of the specific functions our text editor gives us.</li>
<li>Understand that, either writing or programming, we actually spend
more time editing text than adding it, and for that reason the
optimization of it should be prioritized.</li>
<li>Reduce the amount of repetitive actions we perform. For this, modal
editors give us <em>macros</em>, that really facilitates this matter.</li>
</ul>

<p>The main caracteristic that defines the philosophy is <em>modes</em>. Let&rsquo;s
say modes are a way to differentiate introducing text from the rest of
functions we make use of to edit text. If we take a look at <em>Microsoft
Word</em>, for example, we can see that we have a main way to interact
with text, while we also have some shortcuts to act on our text. We
can select text with our mouse, move around with the arrow keys&hellip; All
this adds up to an intuitive way to edit text, but, is it really an
efficient way to do it?</p>

<h3 id="how-do-the-controls-we-all-know-translate-to-a-modal-editor">How do the controls we all know translate to a modal editor?</h3>

<p>At first glance, modal editing controls may appear unintuitive or just
weird. Modal editors make us of mnemonics to try to make it intuitive
for us to learn the commands. Sounds doubtful, but believe me when I
say that it&rsquo;s just about undertanding the logic behind it, after that,
everything in modal editing follows the same principles.</p>

<p>I&rsquo;m going to make use of <em>Vim</em> to explain my point, just because I
think the sucessor of an edit born in the 70s that&rsquo;s still relevant is
a good enought reason for me to have it as a reference. And yes, <em>Vi</em>
wasn&rsquo;t the first modal editor, but it&rsquo;s the one which got popular to
the point that a lot of people still use it today.</p>

<p><center><img src="/img/posts/modal-editing/vim-modes.gif" alt="Vim mode
demonstration" /></center></p>

<p><em>Vim</em> (Vi IMproved) tries to take <em>Vi</em> and improve it. Mainly they are
similar, but I think it&rsquo;s weird to talk about <em>Vi</em> having <em>Vim</em>
available to us.</p>

<p>This are the modes that <em>Vim</em> has available to us:</p>

<ul>
<li><code>Normal mode</code>: This mode is the main one, in normal mode we can move
around the document, search for text, find characters, delete text or
tell our editor which part of our text we want to modify&hellip; This mode
makes use of mnemonics to assign functions to the alphanumeric keys of
our keyboard, for example <code>d</code> for <code>delete</code>, <code>p</code> for <code>paste</code>, etc. To
move around the document we can use <code>h</code> to move left, <code>j</code> to move
down, <code>k</code> to move up and <code>l</code> to move right. Again, this may some weird
but we can move around our document without even reaching for the
arrows.</li>
<li><code>Insert mode</code>: Every person know this mode, it&rsquo;s the one every
modern text editor uses, where you can just type alphanumeric
characters and they will appear on the screen. We still have some
shortcuts available to us, but the main purpouse of this mode is just
introducing text.</li>
<li><code>Visual mode</code>: This mode exist just for text selection, we still
have the <code>normal mode</code> movement keys to move around and select
text. This is a really powerful mode as we can make use of the
searching fuctionality to move our cursor, and so select whats between
our starting point and our actual cursors position.</li>
<li><code>Visual block mode</code>: This mode is exactly like the last one, but we
can now select text in blocks, this is really useful if we want to
select text separated by columns, like in data tables.</li>
<li><code>Replace mode</code>: I&rsquo;ve actually never used this mode, it works as when
you let find your insert key is turned on in <em>Microsoft Word</em> and just
replaces text as you write. It doesn&rsquo;t offer much as you probably
prefer to use normal mode editing functions to replace text.</li>
</ul>

<p>There are more modes to <em>Vim</em>, like <code>command mode</code>, <code>^X mode</code> or <code>Ex
command mode</code>, but they are much more advanced and I think it&rsquo;s better
not to think about them when you&rsquo;re first learning <em>Vim</em>.</p>

<h2 id="the-language">The language</h2>

<p>I&rsquo;ve been talking about modal editing for some time, but I can&rsquo;t
forget to talk about what makes modal editing actually be useful and
intuitive. I&rsquo;m talking about the <em>Vim</em> language, it&rsquo;s what <em>Vim</em> uses
for it&rsquo;s <em>commands</em> or <em>shortcuts</em>. As I said before <code>insert mode</code> is
the one we use to introduce text, but to make use of the magic that
<em>Vim</em> is known for we have to take a look at <code>normal mode</code>. Every
<em>command</em> is formed by three parts: a <em>verb</em>, a <em>subject</em> and
optionally a <em>movement</em>. This makes the automation and repetition of
this <em>commands</em> so easy. You can now use <em>macros</em> around this
<em>commands</em>. Let&rsquo;s take a look at some examples.</p>

<p><center><img src="/img/posts/modal-editing/vim-words.png" alt="Vim command
structure" /></center></p>

<p>How is it possible to memorized every single <em>Vim</em> command, how can
we, for example, delete two words? Well, we want to <strong>delete</strong>,
<strong>two</strong>, <strong>words</strong>. We have <em>delete</em> as a verb, <em>word</em> as a subject
and <em>two</em> as a movement. It&rsquo;s so easy as positioning our cursor behind
the first word we want to delete, and in <code>normal mode</code> type <code>d2w</code>. Is
it really that easy? what does that mean? Literally <em>delete two
words</em>. That&rsquo;s how vim commands work. How can we change a word? <code>cw</code>
(<em>Change Word</em>), delete an entire paragraph? <code>dip</code> (<em>Delete Inside
Paragraph</em>), change the content of a quoted text? <code>ci&quot;</code> (<em>Change
Inside &ldquo;</em>). We could spend the entire day listing example, but you get
the point.</p>

<h2 id="why-make-use-of-modal-editing">Why make use of modal editing?</h2>

<p>Even though behind the philosophy there is no focus in health, it&rsquo;s
inherent that moving your hand and specially your wrist less, makes
for a healthier typing experience. There is no real scientific study
behind it but it&rsquo;s well known that it can help with wrist pains
derived from having to move your hand so much between your keyboard
and the arrow keys or the mouse.</p>

<p>Speed is one of it&rsquo;s main advantages. Once you learn the basic
movement keys and the purpouse of the several modes available to us,
every action is at most at two keys of distance of our fingers.</p>

<p>Learning to use modal editing is tedious, you have to change your way
of thinking, a bit like when you learn to program, but when you start
to have some agility it&rsquo;s easy to see the benefits. In my case, I
started learning <em>Vim</em> because I got interested in improving my speed,
every travel to they mouse or arrow keys feels cumbersome and made me
feel clumsy.</p>

<p>If I&rsquo;m honest with you, I don&rsquo;t think learning it is difficult at all,
once you learn the main concepts it&rsquo;s all about logic to keep making
sense of the commands.</p>

<h2 id="how-not-to-learn-about-modal-editing">How not to learn about modal editing?</h2>

<p>I&rsquo;ve said <em>Vim</em> is not hard, yes, but it requieres a learning
period. You shouldn&rsquo;t force yourself to use it at work or in a project
that requires to be productive, at least give it some time before you
start depending on it.</p>

<p><center><img src="https://proxy.duckduckgo.com/iu/?u=http%3A%2F%2Fergoemacs.org%2Femacs%2Fi%2Femacs_learning_curves.png&amp;f=1" alt="Learning
curves" /></center></p>

<p>You don&rsquo;t actually have to use <code>vim</code> to learn modal editing, every
decent and modernt text editor has some kind of plugin to get modal
editing working for it. <em>Visual Studio Code</em> has one for it, start
using that and maybe move towards <em>Vim</em> progressively.</p>

<h2 id="how-to-actually-learn-about-modal-editing">How to actually learn about modal editing?</h2>

<p>If you&rsquo;re inclined to learn <em>Vim</em> you can make use of <code>vimtutor</code> in
the console, which is a really good resource that guides you through
vim while you learn about it&rsquo;s controls and commands. <code>vimtutor</code> comes
installed with <code>vim</code> and if you&rsquo;re using any <em>linux</em> distro it&rsquo;s
probably available to you.</p>

<p>If you end up deciding to use <code>emacs</code>, which by default is not a modal
editor, it&rsquo;s <code>evil</code> packages might be helpful to you. They turn
<em>Emacs</em> into a full fledged modal editor based on <em>Vim</em>
controls. <em>Emacs&rsquo;</em> <code>evil</code> packages have <code>evil-tutor</code>, which is just a
translation of <code>vimtutor</code> that comes with <code>evil</code>.</p>

<p>As I said before, any decent known text editor has a plugin that
implements modal editing to it. Make use of that plugin. I don&rsquo;t have
a tutorial for each of them but you can start to try writing small
texts, twitts, maybe emails or whatever motivates you to keep
learning.</p>

<p>You can also play, yes, play! There are some simple games that make
use of <em>Vim</em> movement keys and several others to try and make you
comfortable moving around with them. There are lots of them, I
recommend you <a href="https://vim-adventures.com/">this one.</a>.</p>

<p>One of the resources that helped me most was the
<a href="https://www.youtube.com/user/ThoughtbotVideo/">ThoughtBot</a> youtube
channel, which normally upload videos of the talks they host, where
some of them are about <em>Vim</em> and <em>Emacs</em>. The ones I recommend the
most are <a href="https://www.youtube.com/watch?v=_NUO4JEtkDw"><em>&ldquo;learning Vim in a
week&rdquo;</em></a> and <a href="https://www.youtube.com/watch?v=JWD1Fpdd4Pc"><em>&ldquo;How I
Learned to Stop Worrying and Love
Emacs&rdquo;</em></a>.</p>

<p>This <a href="https://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim/1220118#1220118">other
text</a>
comes into detail about how you can make use of <code>vim</code> beyond what most
people know about it, in a really advanced way.</p>

<p>If you end up using <em>Vim</em> or <em>Emacs</em>, the posibilities this text
editors offer us are inmense, they introduce a programming language
interpreter that let us expand the functionalities of this editors
with the only limit of our imagination. It&rsquo;s also because of this that
we can feel intimidated coming into this editors, they have to much to
offer but also so much to learn, I recommend you learn the basics and
learn little by little how you can improve your speed and
functionalities that could come in handy to you.</p>

<h2 id="conclusion">Conclusion</h2>

<p>This is the end of my text, if you were coming for an answer on how to
get out of <em>Vim</em> it was <code>:q</code>. With this post I wanted to abstract
myself from the technical questions. It&rsquo;s possible that in the future
I&rsquo;ll write something more technical, but there are already tons of
resources on how to learn <em>Vim</em> so you will probably have to wait.</p>

<h2 id="links-of-interest">Links of interest</h2>

<ul>
<li><a href="https://insights.stackoverflow.com/survey/2019#development-environments-and-tools">2019 text editor popularity survey by Stack
Overflow.</a></li>
<li><a href="https://en.wikipedia.org/wiki/Vi">The Wikipedia page of Vi, the predecessor of
Vim</a></li>
<li><a href="https://www.vim.org/">Vim, <strong>the</strong> modal text editor.</a></li>
<li><a href="https://github.com/eli-rodriguezperez/dotfiles/blob/master/init.el">Link to my emacs config file, adapted for modal
editing.</a></li>
<li><a href="https://github.com/eli-rodriguezperez/dotfiles/blob/master/.config/nvim/init.vim">Link to my vim config
file</a></li>
<li><a href="https://vim-adventures.com/">Vim-adventures, a game that makes use of vim controls to teach you
vim.</a></li>
<li><a href="https://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim/1220118#1220118">A post that tries to teach us about the advanced ways we can make
use of vim.</a></li>
</ul>
]]></content>
        </item>
        
    </channel>
</rss>
