<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Eli Rodríguez Pérez</title>
        <link>https://eli-rodriguez.com/posts/</link>
        <description>Recent content in Posts on Eli Rodríguez Pérez</description>
        <generator>Hugo -- gohugo.io</generator>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sun, 29 Sep 2019 15:40:00 +0200</lastBuildDate>
        <atom:link href="https://eli-rodriguez.com/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Usando un teclado todavía más pequeñito</title>
            <link>https://eli-rodriguez.com/posts/usando-un-teclado-todav%C3%ADa-m%C3%A1s-peque%C3%B1ito/</link>
            <pubDate>Sun, 29 Sep 2019 15:40:00 +0200</pubDate>
            
            <guid>https://eli-rodriguez.com/posts/usando-un-teclado-todav%C3%ADa-m%C3%A1s-peque%C3%B1ito/</guid>
            <description>40% ortholinear keyboard  La última vez descubrí el maravilloso mundo de QMK y la personalización de firmware en teclados. Si recordáis, estuvimos hablando de la importancia de sentirse cómoda usando tu teclado, sobre todo cuando es tu herramienta de trabajo. También di un poco una pista de que este otro post iba a venir. ¡Y aquí está!
Mi nuevo teclado   
Este es mi nuevo teclado, es un teclado ortolineal con un tamaño del 40% y es mi nueva herramienta de trabajo.</description>
            <content type="html"><![CDATA[


    <figure class="left" >
        <img src="/img/posts/ortholinear-keyboard/niu-mini.jpg"   />

        
            <figcaption class="center" >40% ortholinear keyboard</figcaption>
        
    </figure>



<p>La última vez descubrí el maravilloso mundo de <a href="https://qmk.fm/">QMK</a> y la
personalización de firmware en teclados. Si recordáis, estuvimos hablando de la
importancia de sentirse cómoda usando tu teclado, sobre todo cuando es tu
herramienta de trabajo. También di un poco una pista de que este otro post iba a
venir. ¡Y aquí está!</p>

<h2 id="mi-nuevo-teclado">Mi nuevo teclado</h2>

<p><center>
    <iframe
    width="760"
    height="428"
    src="https://www.youtube.com/embed/bEPg8kk84gw"
    frameborder="0"
    allow="accelerometer; encrypted-media; gyroscope; picture-in-picture"
    allowfullscreen></iframe>
</center></p>

<p>Este es mi nuevo teclado, es un teclado ortolineal con un tamaño del 40% y es mi
nueva herramienta de trabajo. Lo uso para todo, para jugar, programar, editar
texto&hellip; <strong>TODO</strong></p>

<p>Lo llevo usando unos meses y estoy totalmente acostumbrada a él. Hay algunos
hábitos que hay que cambiar pero después de un rato usándolo ya no hay ningún
problema.</p>

<p>Este tipo de teclado se le llama 40% porque es más o menos el 40% del tamaño de
un teclado tradicional con sus flechitas y teclado numérico. Mucha gente piensa
que usar un teclado más pequeño implica perder funcionalidad, y aunque así lo
parezca cuando te fijas en un teclado tan pequeño, no es para nada así. Hay un
dicho que dice: &ldquo;En un teclado tradicional tus dedos se mueven a las teclas,
mientras que en un 40% las teclas se mueven hacia ti.&rdquo; Este teclado en
específico tiene 47 teclas y nunca pensaría que diría esto pero hay algunas
teclas que ni siquiera estoy usando. Esto no va de tener el mayor número de
teclas, va de cómo las usas, y teniendo la posibilidad de programar la
funcionalidad de cada tecla ha hecho darme cuenta de que no necesito un teclado
más grande.</p>

<p>También tengo que puntualizar que no todos los teclados pequeños son iguales, y
que sea 40% no implica que las teclas tengan por qué estar ordenadas en
casillas. Esto es una foto de un teclado que a pesar de ser 40% tiene las filas
ordenadas de la manera tradicional.</p>


    <figure class="left" >
        <img src="/img/posts/ortholinear-keyboard/smol-keeb.jpg"   />

        
            <figcaption class="center" >40% con filas escalonadas (Dimple de tjcampie)</figcaption>
        
    </figure>



<p>Un teclado ortolineal es aquel que tiene ordenadas las teclas en forma de
casillas, como el teclado numérico que podemos encontrar en un teclado
tradicional. Los más populares de este tipo están ordenados en una cuadrícula de
4x12 pero puedes encontrarlo distribuido de muchas maneras diferentes.</p>

<p>Si echamos un vistazo a mi teclado, podemos observar que está diseñado de tal
manera que cada tecla está como mucho a una tecla de distancia de la posición
donde descansan tus dedos, exceptuando la fila de abajo. La fila de abajo está
pensada para que la pulses con el dedo pulgar, o incluso con la esquina de la
palma de tu mano. Las primeras tres filas son las que se encargan de pintar los
caracteres alfanuméricos y algunos modificadores como puede ser el <em>shift</em>. La
parte interesante sobre este teclado es que se deshace de la increiblemente
gigante tecla de espacio y pone más teclas a nuestra disposición que pueden
hacer la función de nuevos modificadores o, por ejemplo, podemos convertir la
fila superior de teclas en una numérica del 1 al 9 como en un teclado
tradicional o hacer actuar cierta parte del teclado como un teclado numérico que
podemos encontrar en un teclado grande. Todo eso teniendo solo 47 teclas
disponibles.</p>

<h2 id="atrapadas-en-la-época-de-las-máquinas-de-escribir">Atrapadas en la época de las máquinas de escribir</h2>


    <figure class="left" >
        <img src="/img/posts/ortholinear-keyboard/full-sized-keyboard.png"   />

        
            <figcaption class="center" >Teclado tradicional de tamaño completo</figcaption>
        
    </figure>



<p>Podemos discutir que un teclado ortolineal no tiene por qué ser ergonómico de
por si, y eso sería correcto. Pero al mismo tiempo, estar atrapadas en el diseño
de teclado inventado para una máquina de escribir hace más de cien años no creo
que lo sea tampoco. La mayoría de teclados modernos están basados en los
populares modelos de teclado fabricados por IBM en los 70, que fueron una
adaptación fácil del diseño que traian las máquinas de escribir de siempre.</p>

<p>Después de todo el tiempo que he estado usando un teclado tan pequeño, usar uno
más grande es un sacrificio, muchas teclas como la de borrar están a kilómetros
de distancia en comparación.</p>

<p>Usar <em>Qwerty</em> es otra de las cosas malas que creo que hemos heredado de las
máquinas de escribir, y creo que algún día me pasaré a <em>Colemak</em>, pero eso sí
que es algo que requiere un poco más de tiempo para acostumbrarse así que
todavía no he encontrado la manera de hacer el cambio.</p>

<p>Uno de los mayores problemas con los teclados tradicionales es la cantidad de
trabajo que le da al dedo meñique. Es un hecho que el dedo meñique es el más
débil de todos, pero por alguna razón le damos el trabajo de pulsar las teclas
más lejanas y mantener pulsadas otras por grandes cantidades de tiempo. Mientras
nuestro dedo más fuerte, el pulgar, está perdiendo el tiempo con la función de
pulsar solamente una tecla.</p>

<p>Los teclados tradicionales suelen encargar una tecla a cada función, y eso es lo
que hace que necesitemos tantas teclas. En teclados pequeños como mi 40%, se
hace uso de las distintas maneras en las que activamos las funciones de un
teclado para mezclar teclas y que no dejen de ser compatibles entre ellas. Las
teclas suelen dividir sus funciones dependiendo de si simplemente pulsas la
tecla o la mantienes. Si nos fijamos en las teclas encargadas de escribir
caracteres, solo necesitamos pulsarla por un periodo pequeño de tiempo, mientras
que con el <em>shift</em>, por ejemplo, para activar su función tenemos que mantener
pulsada dicha tecla. Teniendo en cuenta esto, podemos mezclar teclas donde su
función sea diferente dependiendo de si pulsamos o mantenemos la tecla. En mi
caso cuando pulso el espacio se inserta un caracter de espacio pero si lo
mantengo pulsado, me lleva a otra capa de teclas que me permiten darle otro
significado al resto de teclas del teclado.</p>

<h2 id="cómo-resuelve-un-teclado-ortolineal-mis-problemas">Cómo resuelve un teclado ortolineal mis problemas</h2>

<p>Ahora mismo estoy bastante contenta y a gusto cuando uso mi teclado. Tiene un
poco de ver con que siento que estoy usando un teclado más cómodo pero gran
parte de ello es porque puedo programarlo como quiera. Tener que adaptarse a
cierto diseño de teclado no es justo porque cada persona tiene unas preferencias
y necesidades diferentes a la hora de usarlo. Realmente creo que la industria
del teclado está atascada, y eso es un problema cuando estamos hablando de
nuestra herramienta de trabajo. La mayoria de gente no quiere aprender nuevas
maneras de hacer cosas, y eso está bien, el problema está cuando se convierte en
norma y en la única opción.</p>

<p>Estoy segura de que si eres taxista hay muchos coches entre los que puedes
elegir que se adaptan a tus necesidades. Si eres cocinera, seguro que tienes
una variedad de herramientas a tu alcance. Si eres fotógrafa, hay miles de
cámaras entre las cuales elegir&hellip; Creo que queda claro a lo que me refiero.</p>

<p>Este teclado no es necesariamente la solución a mis problemas, pero me da la
capacidad de tener un flujo de trabajo con el que estoy cómoda cuando tengo que
sentarme en un ordenador durante al menos 8h al día.</p>

<h2 id="mi-configuración-de-teclas">Mi configuración de teclas</h2>

<p><a href="https://github.com/eli-rodriguezperez/qmk_firmware/blob/master/keyboards/planck/keymaps/eliseven/keymap.c">Mi
configuración</a>
ha cambiado un poco desde mi último <em>post</em>, pero la mayoría de
cosas siguen funcionando igual que en mi teclado más grande. Probablemente haya
más cambios cuando me vaya dando cuenta de que ciertas cosas pueden mejorar pero
mayormente así se queda mi teclado.</p>

<p><center><img src="/img/posts/ortholinear-keyboard/layer-0.png" alt="Capa principal" /></center></p>

<p>Mayormente uso gran parte de la distribución tradicional de un teclado <em>qwerty</em>
con algunos cambios que se adaptan a mi gusto. Uso <em>vim</em> como editor así que me.
gusta tener la tecla de <code>escape</code> a mano. Así que en lugar de <code>bloq mayus</code> la
tecla hace de función de <code>escape</code> cuando la pulso, y de <code>control</code> cuando la
mantengo pulsada.</p>

<p>La función del <code>tabulador</code> se activa cuando pulsamos la tecla, así que aprovecho
esto para que cuando la mantenga pulsada me de acceso a mi capa en la que tengo
un teclado numérico completo y las teclas de función, luego le echamos un
vistazo.</p>

<p>La tecla de <code>espacio</code> también se activa con pulsación, y como he explicado
antes, cuando la mantengo me da acceso a la capa de movimiento en la que tengo
puestas las flechas y otras teclas que me facilitan moverme por texto cuando no
estoy moviéndome en <em>vim</em>.</p>

<p>En las teclas de las esquinas no sabía qué poner así que he acabado poniendo las
teclas de <code>Hyper</code> y <code>Meh</code>, que simulan la pulsación de <code>ctrl+shift+alt+gui</code> y
<code>ctrl+shift+alt</code> teniendo que pulsar solo una tecla. Estas combinaciones de
teclas no suelen ser muy comunes en los sistemas operativos, así que me
aprovecho y hago uso de ellas para ponerle funciones que yo quiera como cambiar
de escritorio, mover ventanas, sacar capturas de pantalla&hellip; Estas teclas son un
poco complicadas de pulsar con el pulgar, así que uso la palma de la mano para
llegar a ellas.</p>

<p>Donde pone <code>MO(1)</code> y <code>MO(2)</code> normalmente se llaman <code>lower</code> y <code>raise</code> y su
función es darte acceso a los símbolos y números a los que normalmente no tienes
acceso por la falta de la fila de números.</p>

<p>Como vemos en la siguiente ilustración y siguiendo la lógica de <code>lower</code> y
<code>raise</code>, cuando pulsamos <code>lower</code> tenemos acceso a la función inferior impresa en
la tecla numérica y al pulsar <code>raise</code> tenemos acceso a la superior.</p>

<p><center><img src="/img/posts/ortholinear-keyboard/key.png" alt="Tecla de teclado" /></center></p>

<p>La foto siguente ilustra la configuración que le doy a las capas de <code>lower</code> y
<code>raise</code>.</p>

<p><center><img src="/img/posts/ortholinear-keyboard/layer-1.png" alt="Capa lower" /></center></p>

<p><center><img src="/img/posts/ortholinear-keyboard/layer-2.png" alt="Capa raise" /></center></p>

<p>Ahora podemos echarle un vistazo a mi capa donde pongo el teclado numérico. Esta
capa se encarga de darle sitio a un teclado numérico completo donde normalmente
descansa mi mano derecha. También he hecho sitio a las teclas de función, las
cuales no uso mucho así que están en una posición un poco rara a la cual me he
acostumbrado ya.</p>

<p><center><img src="/img/posts/ortholinear-keyboard/layer-3.png" alt="Capa numérica" /></center></p>

<p>And lastly we have my movement layer, this layer aims to facilitate what arrow
keys normally do without having them a million kilometers away from my normal
position. I&rsquo;ve chosen to have the arrows vim style but you can see how useful
this layer can be compared to the stardard way of using arrows.</p>

<p>Por último tenemos la capa de movimiento, esta capa nos ayuda a movernos por la
pantalla cuando no tenemos acceso a los comandos de <em>vim</em>. En mi caso tengo
configuradas las flechas como se usarían en vim pero se puede ver cómo de util
es tener una capa de estas frente a la manera tradicional de usar las flechas.</p>

<p><center><img src="/img/posts/ortholinear-keyboard/layer-4.png" alt="Capa de movimiento" /></center></p>

<h2 id="conclusión">Conclusión</h2>

<p>Y hasta aquí hemos llegado, espero que os haya gustado el <em>post</em>. Mi interés en
todo esto nace de querer sentirme mejor con mi entorno de trabajo. Mi intención
no es decirle a nadie cómo hacer las cosas, esto es una reflexión tratando de
mostrar alternativas que la gente puede no conocer.</p>
]]></content>
        </item>
        
        <item>
            <title>Edición modal, la mejor manera de editar texto</title>
            <link>https://eli-rodriguez.com/posts/edici%C3%B3n-modal-la-mejor-manera-de-editar-texto/</link>
            <pubDate>Sun, 26 May 2019 15:29:34 +0200</pubDate>
            
            <guid>https://eli-rodriguez.com/posts/edici%C3%B3n-modal-la-mejor-manera-de-editar-texto/</guid>
            <description>Bueno vale, igual me he pasado. Realmente me da igual la manera en la que edites texto, lo recomentable es que uses lo que más cómodo te sea. Lo que realmente me gustaría decir con este texto es que hay más maneras de editar texto que la tradicional, la que la mayoría de gente usa cuando le enseñan a utilizar un ordenador.
Con este texto no pretendo hacer sentir mal a la gente que no le apetece aprender la manera en la que yo hago las cosas.</description>
            <content type="html"><![CDATA[

<p><center><img src="https://lcom.static.linuxfound.org/images/stories/vim-logo.jpg" alt="" /></center></p>

<p>Bueno vale, igual me he pasado. Realmente me da igual la manera en la
que edites texto, lo recomentable es que uses lo que más cómodo te
sea. Lo que realmente me gustaría decir con este texto es que hay más
maneras de editar texto que <strong>la tradicional</strong>, la que la mayoría de
gente usa cuando le enseñan a utilizar un ordenador.</p>

<p>Con este texto no pretendo hacer sentir mal a la gente que no le
apetece aprender la manera en la que yo hago las cosas. No es una
guerra sobre editores, ni sobre cómo cada una edita texto. Si estás
leyendo esto es porque te interesa aprender sobre un concepto que no
es tan común, no vengo aquí a convencer a nadie de cómo tiene que
hacer las cosas.</p>

<p>Esto tampoco es un tutorial de cómo usar <em>Vim</em>, quiero centrarme en lo
que implica usar un editor modal, el porqué, el cómo y el cómo no. Voy
a dar algunos recursos e ideas que pueden ayudar si alguien se anima a
aprender, pero esto <strong>no</strong> es un tutorial.</p>

<p><center><img src="/img/posts/modal-editing/vim-demonstration.gif" alt="" /></center></p>

<h2 id="la-filosofía">La filosofía</h2>

<p>La edición modal nace de las necesidades que tenían los programadores
allá cuando para interactuar con un ordenador tenías que hacerlo a
través de la <em>línea de comandos</em>. No existían ratones porque no
existía una interfaz por la que navegar. Aquí es donde a partir de
estas necesidades surgen los intentos de optimizar la manera en la que
editamos texto.</p>

<p>Y bueno &ldquo;¿Cuál es la filosofía de la edición modal?&rdquo; os
preguntaréis. Se podría resumir en unos puntos bastante concretos
aunque probablemente me deje algo:</p>

<ul>
<li>Optimizar el uso del teclado.</li>
<li>Minimizar la distancia en la que movemos la mano de lo que se llama
la <em>home row</em>, que es la línea principal donde descansan los dedos.</li>
<li>Utilizar modos, de ahí <em>edición modal</em>, que cambian el
comportamiento de cada una de las teclas para hacer uso de funciones
específicas.</li>
<li>Entender que, estés escribiendo un libro o programando, pasamos más
tiempo editando texto que añadiéndolo, y por tanto, la optimización
de ello deba priorizarse.</li>
<li>Reducir el número de acciones repetitivas que hacemos y para ello
hace uso de <em>macros</em> que facilitan las tareas repetitivas.</li>
</ul>

<p>La característica principal que define todo esto serían los
modos. Digamos que los modos son maneras de separar lo que es
introducir texto con el resto de cosas relacionadas con la edición. En
<em>Microsoft Word</em> por ejemplo, podemos usar las teclas para introducir
texto, con algún que otro <em>atajo de teclado</em> para distintas funciones,
podemos seleccionar texto con el ratón, movernos con las
flechas&hellip; Todo esto resulta en una manera intuitiva de editar texto,
pero ¿es una manera eficiente de hacerlo?</p>

<h3 id="cómo-se-transfieren-los-controles-que-conocemos-a-un-editor-modal">¿Cómo se transfieren los controles que conocemos a un editor modal?</h3>

<p>Los controles pueden resultar raros o poco intuitivos, aunque se
utiliza la mnemotécnica para facilitar el recordar los comandos. Suena
raro, pero créeme cuando digo que es cuestión de entender la lógica, a
partir de ahí, todo sigue los mismos principios.</p>

<p>Y como yo vengo aquí a hablar de mi libro, voy a hablar de
<em>Vim</em>. Porque es el sucesor de un editor que se creó en 1976 y sigue
teniendo relevancia a día de hoy, me parece lo suficientemente
importante para tenerlo de referencia. <em>Vi</em> no fue el primer editor
modal, pero fue el que se popularizó hasta el punto de seguirse
utilizando a día de hoy.</p>

<p><center><img src="/img/posts/modal-editing/vim-modes.gif" alt="" /></center></p>

<p><em>Vim</em> (Vi IMproved) trata de coger <em>Vi</em> y mejorarlo. Principalmente
son muy iguales, aunque se me haría raro hablar de <em>Vi</em> ya que ha sido
eclipsado y prefiero contar cómo <em>Vim</em> traduce la filosofía modal a
los modos que utiliza:</p>

<ul>
<li><code>Normal mode</code>: Este modo, que traducido sería <em>modo normal</em>, es el
modo principal, en el que más tiempo se suele pasar normalmente. En
el <em>modo normal</em> podemos movernos por el documento, buscar texto,
buscar caracteres, borrar texto o decirle al editor cuál es la parte
del texto que queremos modificar, entre muchas otras cosas. Este
modo utiliza la mnemotécnica para asignar funciones a las teclas
alfanuméricas, como podría ser <code>d</code> para <code>delete</code> y <code>p</code> para
<code>paste</code>. Para moverte por el texto existen diferentes teclas, pero
las principales serían <code>h</code> para moverse a la izquierda, <code>l</code> a la
derecha, <code>j</code> hacia abajo y <code>k</code> hacia arriba. Suena raro, pero ahora
podemos movernos por el texto sin mover la mano para llegar a las
flechas.</li>
<li><code>Insert mode</code>: Este modo es el que todo el mundo conoce, el que está
en todas partes, y es como bien indica su nombre el modo para
insertar texto. Se podría decir que es uno de los modos en los que
más tiempo se está. Aquí se escribe texto, las teclas alfanuméricas
funcionan de manera normal. Siguen existiendo ciertos <em>atajos de
teclado</em> que nos ayudan a realizar algunas acciones, pero muy
puntuales.</li>
<li><code>Visual mode</code>: Este modo es únicamente para seleccionar texto,
seguimos teniendo las teclas de control del <em>modo normal</em> para
movernos por el texto y que este se seleccione. Este modo es muy
potente, ya que podemos usar las teclas de búsqueda para mover
nuestro cursor y así mover la selección también.</li>
<li><code>Visual block mode</code>: Este viene siendo exactamente el mismo modo que
antes, solo que el texto se selecciona en bloques. Es muy útil para
seleccionar texto que está separado en colúmnas como pueden ser las
tablas de datos.</li>
<li><code>Replace mode</code>: Este modo no lo he usado en mi vida, funciona igual
que cuando te dejas pulsada la tecla insert en word. No ofrece
ninguna utilidad, puesto que es más recomendable hacer uso de las
utilidades que Vim ofrece en su <strong>modo normal</strong>.</li>
</ul>

<p>Existe algún que otro modo más, como puede ser el <code>command mode</code>, <code>^X
mode</code> o el <code>Ex command mode</code>, pero no voy a entrar por ahí porque es
algo más avanzado. Y aunque todo esto parezca raro, resulta en una
edición de texto en la que se puede no mover la mano en ningún
momento.</p>

<h2 id="el-lenguaje">El lenguaje</h2>

<p>He hablado un buen rato de la edición modal, pero no podemos
olvidarnos de la parte que hace que la edición modal sea eficiente e
intuitiva. Hablo del lenguaje que usa <code>vim</code> para sus <em>comandos</em> o
<em>atajos de teclado</em>. Como he dicho antes, el modo <code>insert</code> es el que
usamos para escribir texto, pero para hacer mágia tenemos el modo
<code>normal</code>. Cada <em>comando</em> está formado por tres partes: un <em>verbo</em>, un
<em>sujeto</em> y opcionalmente un <em>movimiento</em>. Esto facilita la
automatización y repetición de estos <em>comandos</em>, los cuales se pueden
programar, crear <em>macros</em>, etc. Vamos a ver unos ejemplos que creo que
demuestran mejor la teoría.</p>

<p><center><img src="/img/posts/modal-editing/vim-words.png" alt="" /></center></p>

<p>Cómo se haría para borrar dos palabras, cómo es posible que nos
acordemos de los millones de <em>comandos</em> que tiene Vim. Bueno, pues
queremos <strong>borrar</strong>, <strong>dos</strong>, <strong>palabras</strong>. Tenemos <em>borrar</em> como
verbo, <em>palabras</em> como sujeto y <em>dos</em> como movimiento. No es más
difícil que posicionar el cursor debajo de la palabra que queremos
borrar y darle a <code>d2w</code>. Pero vamos a ver, cómo que <code>d2w</code>, ¿qué
significa eso? Literalmente, <em>delete two words</em>. También podemos
añadir un multiplicador al principio para repetir el comando. Por
ejemplo, ¿qué haríamos en caso de querer borrar dos veces dos
palabras?  <code>2d2w</code>. ¿Cambiar una palabra? <code>cw</code> (<em>Change Word</em>), ¿borrar
un párrafo? <code>dip</code> (<em>Delete Inside Paragraph</em>), ¿cambiar el contenido
de un texto entre comillas? <code>ci&quot;</code> (<em>Change Inside &ldquo;</em>). Y así podría
seguir hasta el infinito, hay verbos para todo y sujetos de todo tipo.</p>

<h2 id="por-qué-usar-la-edición-modal">¿Por qué usar la edición modal?</h2>

<p>Aunque tras la filosofía no haya una preocupación por la salud, y
aunque no haya un estudio real que lo pruebe, se dice que usar un
editor modal puede ayudar a reducir dolores de muñeca derivados de
tener que hacer tantos movimientos para llegar a las flechas del
teclado o a coger el ratón.</p>

<p>La rapidez es una de las ventajas principales por las que aprender a
usar la edición modal. Una vez aprendidos los movimientos básicos y
los propósitos de los distintos modos, todas las acciones que queramos
realizar sobre nuestro texto están como mucho a dos teclas de
distancia de nuestros dedos.</p>

<p>Aprender a usar la edición modal es tedioso, hay que cambiar la manera
de pensar, un poco como cuando se aprende a programar, pero cuando
llegas a tener un poco de soltura es fácil ver los beneficios. En mi
caso, el interés por aprender vino de querer ser más rápida con el
teclado, cada vez que tengo que usar el ratón para hacer algo que se
puede hacer con el teclado me siento lenta.</p>

<p>Si os soy sincera, no creo que sea difícil como tal, no va de
memorizarse un libro, una vez entiendes los conceptos principales es
cuestión de lógica ir entendiendo los controles.</p>

<h2 id="cómo-no-aprender-a-usar-la-edición-modal">¿Cómo no aprender a usar la edición modal?</h2>

<p>He dicho que <em>Vim</em> no es difícil, sí, pero requiere un periodo de
aprendizaje. No recomiendo obligarse a usarlo en el trabajo o en otras
situaciones en las que necesites ser eficiente hasta que tengas cierta
soltura.</p>

<p><center><img src="https://proxy.duckduckgo.com/iu/?u=http%3A%2F%2Fergoemacs.org%2Femacs%2Fi%2Femacs_learning_curves.png&amp;f=1" alt="Learning
curves" /></center></p>

<p>No tienes por qué usar <code>vim</code> para aprenderlo, todo editor decente
dispone de algún tipo de plugin, que aunque algunos peores que otros,
todos llegan a ofrecer la funcionalidad principal de un editor
modal. Si tienes soltura usando <em>Visual Studio Code</em>, prueba a usar su
plugin de Vim para cosas sencillas.</p>

<h2 id="cómo-sí-aprender-a-usar-la-edición-modal">¿Cómo sí aprender a usar la edición modal?</h2>

<ul>
<li><p>Si estás dispuesta a usar <em>Vim</em> como editor para aprender, puedes
hacer uso de <code>vimtutor</code>, que es un muy buen recurso que te guía a
través del mismo de programa <em>Vim</em> sobre un documento de texto que
progresivamente te enseña los controles. Como apunte, <code>vimtutor</code> viene
instalado con Vim y lo más probable es que si tienes instalado <em>linux</em>
o <em>macOS</em> venga preinstalado.</p></li>

<li><p>Si te decides por usar <code>emacs</code>, que por defecto no es un editor
modal, con sus paquetes <em>evil</em> que implementan la funcionalidad modal
puedes hacer uso de <em>evil-tutor</em>, que es una traducción a <em>Emacs</em> del
<code>vimtutor</code> hablado anteriormente.</p></li>

<li><p>Como he dicho antes, cualquier editor conocido dispone de un plugin
que implementa la funcionalidad modal en el mismo. Haz uso de ese
modo, no conozco de tutoriales para cada uno de ellos, pero puedes
intentar escribir textos básicos, tuits, correos, lo que sea que te
anime a aprender.</p></li>

<li><p>También puedes jugar. Sí, jugar. Existen juegos simples que haciendo
uso de los controles de Vim intentan transmitirte los mismos controles
que puedes utilizar en el editor de texto. Sé que hay varios, pero yo
recomiendo <a href="https://vim-adventures.com/">este</a>.</p></li>

<li><p>Uno de los recursos que más me ayudó a mí fue el canal de youtube de
<a href="https://www.youtube.com/user/ThoughtbotVideo/">ThoughtBot</a>, donde
suelen subir videos de las charlas que acogen, entre ellas algunas de
<em>Vim</em> y *Emacs**. Las que más recomendaría son <a href="https://www.youtube.com/watch?v=_NUO4JEtkDw"><em>&ldquo;aprendiendo Vim en
una semana&rdquo;</em></a> y <a href="https://www.youtube.com/watch?v=JWD1Fpdd4Pc"><em>&ldquo;cómo
dejé de preocuparme y acepté
emacs&rdquo;</em></a>. Ambas en inglés
pero muy interesantes.</p></li>

<li><p>Este <a href="https://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim/1220118#1220118">otro
texto</a>
entra en detalle en cómo poder usar <code>vim</code> más allá de los controles
básicos, fijándose en cómo incorpora funcionalidades de <code>ed</code> y demás
utilidades.</p></li>

<li><p>Afróntalo progresivamente. Si acabas usando <em>Vim</em> o <em>Emacs</em>, las
posibilidades que ofrecen estos editores son infinitas, ya que
incorporan un lenguaje de programación para ampliar la funcionalidad
de estos editores. Y <strong>todo</strong> lo que se nos pueda ocurrir hacer, se
puede hacer. Es por ello que cuando empezamos a aprender nos podemos
sentir sobrecogidos por la cantidad de información, y lo recomendable
es aprender lo básico e ir investigando poco a poco cómo hacer uso de
las funcionalidades que necesitemos.</p></li>
</ul>

<h2 id="conclusión">Conclusión</h2>

<p>Y hasta aquí este texto, si lo que venías a buscar era cómo salir de
<em>Vim</em> era con <code>:q</code>. Con este texto quería abstraerme de las cuestiones
técnicas, es posible que en un futuro escriba algo más técnico pero ya
existen un monton de videos y textos que se enfocan en aprender <em>Vim</em>,
así que esperad sentadas.</p>

<h2 id="links-de-interés">Links de interés</h2>

<ul>
<li><a href="https://insights.stackoverflow.com/survey/2019#development-environments-and-tools">Popularidad de editores de texto en la encuesta de 2019 en
Stackoverflow.</a></li>
<li><a href="https://en.wikipedia.org/wiki/Vi">Página de wikipedia de Vi, predecesor de
Vim.</a></li>
<li><a href="https://www.vim.org/">Vim, el editor modal por excelencia.</a></li>
<li><a href="https://github.com/eli-rodriguezperez/dotfiles/blob/master/init.el">Link a mi configuración de emacs, adaptada para usar edición
modal.</a></li>
<li><a href="https://github.com/eli-rodriguezperez/dotfiles/blob/master/.config/nvim/init.vim">Link a mi configuración de
vim.</a></li>
<li><a href="https://vim-adventures.com/">Vim-adventures, juego que hace uso de controles modales para
enseñarte.</a></li>
<li><a href="https://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim/1220118#1220118">Texto que muestra hasta donde puede llegar Vim más allá de lo
básico</a></li>
</ul>
]]></content>
        </item>
        
    </channel>
</rss>
